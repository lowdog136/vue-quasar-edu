import { db } from './index'
import { collection, getDocs, onSnapshot } from 'firebase/firestore'

/**
 * –¢–µ—Å—Ç –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ Firebase –∏ –∑–∞–≥—Ä—É–∑–∫–∏ –¥–∞–Ω–Ω—ã—Ö
 */
export const testFirebaseConnection = async () => {
  console.log('üß™ –ù–∞—á–∏–Ω–∞–µ–º —Ç–µ—Å—Ç –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ Firebase...')

  try {
    // –¢–µ—Å—Ç 1: –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –∫–æ–ª–ª–µ–∫—Ü–∏–∏ all-games
    console.log('üìä –¢–µ—Å—Ç 1: –ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–æ–ª–ª–µ–∫—Ü–∏–∏ all-games...')
    const gamesRef = collection(db, 'all-games')
    const gamesSnap = await getDocs(gamesRef)
    console.log(`‚úÖ –ö–æ–ª–ª–µ–∫—Ü–∏—è all-games –¥–æ—Å—Ç—É–ø–Ω–∞. –î–æ–∫—É–º–µ–Ω—Ç–æ–≤: ${gamesSnap.size}`)

    // –í—ã–≤–æ–¥–∏–º –ø–µ—Ä–≤—ã–µ 3 –∏–≥—Ä—ã –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏
    let count = 0
    gamesSnap.forEach(doc => {
      if (count < 3) {
        const gameData = doc.data()
        console.log(`üéÆ –ò–≥—Ä–∞ ${count + 1}:`, {
          id: doc.id,
          event: gameData.event,
          date: gameData.date,
          datestamp: gameData.datestamp
        })
        count++
      }
    })

    // –¢–µ—Å—Ç 2: –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–æ–ª–ª–µ–∫—Ü–∏—é siteNews
    console.log('üì∞ –¢–µ—Å—Ç 2: –ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–æ–ª–ª–µ–∫—Ü–∏–∏ siteNews...')
    const newsRef = collection(db, 'siteNews')
    const newsSnap = await getDocs(newsRef)
    console.log(`‚úÖ –ö–æ–ª–ª–µ–∫—Ü–∏—è siteNews –¥–æ—Å—Ç—É–ø–Ω–∞. –î–æ–∫—É–º–µ–Ω—Ç–æ–≤: ${newsSnap.size}`)

    // –¢–µ—Å—Ç 3: –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–æ–ª–ª–µ–∫—Ü–∏—é dashboard-stats
    console.log('üìà –¢–µ—Å—Ç 3: –ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–æ–ª–ª–µ–∫—Ü–∏–∏ dashboard-stats...')
    const statsRef = collection(db, 'dashboard-stats')
    const statsSnap = await getDocs(statsRef)
    console.log(`‚úÖ –ö–æ–ª–ª–µ–∫—Ü–∏—è dashboard-stats –¥–æ—Å—Ç—É–ø–Ω–∞. –î–æ–∫—É–º–µ–Ω—Ç–æ–≤: ${statsSnap.size}`)

    return {
      success: true,
      games: gamesSnap.size,
      news: newsSnap.size,
      stats: statsSnap.size
    }
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è Firebase:', error)
    return {
      success: false,
      error: error.message
    }
  }
}

/**
 * –¢–µ—Å—Ç —Å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ–º onSnapshot (–∫–∞–∫ –≤ –¥—Ä—É–≥–∏—Ö –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–∞—Ö)
 */
export const testFirebaseWithSnapshot = () => {
  console.log('üîÑ –¢–µ—Å—Ç —Å onSnapshot...')

  const gamesRef = collection(db, 'all-games')

  const unsubscribe = onSnapshot(gamesRef, (querySnapshot) => {
    console.log(`üìä onSnapshot: –ù–∞–π–¥–µ–Ω–æ ${querySnapshot.size} –∏–≥—Ä`)

    querySnapshot.forEach((doc, index) => {
      if (index < 3) {
        const gameData = doc.data()
        console.log(`üéÆ onSnapshot –ò–≥—Ä–∞ ${index + 1}:`, {
          id: doc.id,
          event: gameData.event,
          date: gameData.date
        })
      }
    })

    // –û—Ç–ø–∏—Å—ã–≤–∞–µ–º—Å—è –ø–æ—Å–ª–µ –ø–µ—Ä–≤–æ–≥–æ –ø–æ–ª—É—á–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö
    unsubscribe()
  }, (error) => {
    console.error('‚ùå –û—à–∏–±–∫–∞ onSnapshot:', error)
  })
}
